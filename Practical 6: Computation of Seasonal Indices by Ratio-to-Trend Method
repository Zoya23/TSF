# Code Generated by Sidekick is for learning and experimentation purposes only.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Load your dataset
path = r"C:\Users\Desktop\DataScience\Sem 2\Time_Series_Analysis\Practical\Symphony-Data.csv"
df = pd.read_csv(path)
df = df.drop(['OPEN', 'HIGH', 'LOW', 'VOLUME', 'CHANGE(%)'], axis=1)
df['DATE'] = pd.to_datetime(df['DATE'], format='%d-%b-%y')
df = df.sort_values(by='DATE', ascending=True)

# Extracting Month and Year Info from Date
df['Year'] = df['DATE'].dt.year
df['Month'] = df['DATE'].dt.month

# Calculate the monthly mean prices for each year
monthly_mean = df.groupby(['Month', 'Year'])['PRICE'].mean().unstack()

# Prepare data for regression
monthly_mean_flat = monthly_mean.stack().reset_index()
monthly_mean_flat['Time_Index'] = np.arange(1, len(monthly_mean_flat) + 1)

X = monthly_mean_flat[['Time_Index']]
y = monthly_mean_flat['PRICE']

# Fit linear regression model
model = LinearRegression()
model.fit(X, y)
monthly_mean_flat['Trend'] = model.predict(X)

# Merge trend back to monthly_mean
monthly_mean_flat['Ratio'] = (monthly_mean_flat['PRICE'] / monthly_mean_flat['Trend']) * 100

# Calculate average ratio for each month
seasonal_indices = monthly_mean_flat.groupby('Month')['Ratio'].mean()

# Normalize indices (optional)
normalized_indices = seasonal_indices / seasonal_indices.mean() * 100

# Plotting
plt.plot(normalized_indices.index, normalized_indices, marker='o')
plt.xlabel('Month')
plt.ylabel('Normalized Seasonal Index')
plt.title('Seasonal Indices by Ratio-to-Trend Method')
plt.show()
