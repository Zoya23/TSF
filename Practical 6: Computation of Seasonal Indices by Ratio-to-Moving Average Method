# Code Generated by Sidekick is for learning and experimentation purposes only.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load your dataset
path = r"C:\Users\Desktop\DataScience\Sem 2\Time_Series_Analysis\Practical\Symphony-Data.csv"
df = pd.read_csv(path)
df = df.drop(['OPEN', 'HIGH', 'LOW', 'VOLUME', 'CHANGE(%)'], axis=1)
df['DATE'] = pd.to_datetime(df['DATE'], format='%d-%b-%y')
df = df.sort_values(by='DATE', ascending=True)

# Extract Month and Year
df['Year'] = df['DATE'].dt.year
df['Month'] = df['DATE'].dt.month

# Calculate 12-month centered moving average (for monthly data)
df['Moving_Avg'] = df['PRICE'].rolling(window=12, center=True).mean()

# Compute ratio to moving average
df['Ratio'] = (df['PRICE'] / df['Moving_Avg']) * 100

# Remove NaN values (edges)
df_clean = df.dropna(subset=['Ratio'])

# Calculate average ratio for each month (seasonal index)
seasonal_indices = df_clean.groupby('Month')['Ratio'].mean()

# Normalize indices (optional)
normalized_indices = seasonal_indices / seasonal_indices.mean() * 100

# Plotting
plt.plot(normalized_indices.index, normalized_indices, marker='o')
plt.xlabel('Month')
plt.ylabel('Normalized Seasonal Index')
plt.title('Seasonal Indices by Ratio-to-Moving Average Method')
plt.show()
